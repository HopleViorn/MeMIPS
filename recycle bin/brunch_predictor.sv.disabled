// `include "../defines.svh"
// module branch_predictor(
//     input INST inst_in,
//     output INST inst_out,
//     output PC branch_address
// );

// PC_4 pc_4=inst_in.pc+4;

// always_comb begin
//     inst_out.pc=inst_in.pc;
//     inst_out.inst=inst_in.inst;
//     if(inst_in.inst[31:29]==3'b000) begin
//         case(inst_in.inst[28:27])
//             2'b00:begin//Special,RegImm
//                 inst_out.is_branch=`false;//TODO RegImm,Special(very important)
//                 inst_out.branch_taken=`false;
//             end
//             2'b01:begin//J 
//                 inst_out.is_branch=`true;
//                 inst_out.branch_taken=`true;
//                 branch_address={pc_4[31:28],inst_in.inst[25:0],2'b00};
//             end
//             default:begin//B
//                 inst_out.is_branch=`true;
//                 inst_out.branch_taken=`true;
//                 branch_address=pc_4+{{14{inst_in.inst[15]}},inst_in.inst[15:0],2'b00};
//             end
//         endcase
//     end
// end

// endmodule